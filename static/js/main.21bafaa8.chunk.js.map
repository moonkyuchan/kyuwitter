{"version":3,"sources":["fbase.js","components/Kyuwitt.js","components/KyuwittFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Kyuwitt","mentions","isOwner","useState","editing","setEditing","text","newKyuwitt","setNewKyuwitt","deleteKyuwitt","a","window","confirm","doc","id","delete","refFromURL","imgFileUrl","toggleEditing","prev","onSubmitEdit","event","preventDefault","update","className","onSubmit","type","placeholder","value","required","onChange","target","onClick","src","alt","style","marginLeft","KyuwittFactory","userObj","kyuWitt","setKyuWitt","imgFile","setImgFile","imgFileRef","ref","child","uid","uuidv4","putString","imgFileResponse","getDownloadURL","kyuwittObj","createdAt","Date","now","creatorId","collection","add","maxLength","for","accept","theFile","files","reader","FileReader","onloadend","finishEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","Home","mention","setMention","useEffect","onSnapshot","snapshot","mentionArray","docs","map","data","marginTop","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","autoComplete","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","size","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","autoFocus","signOut","push","Navigation","to","AppRouter","isLoggedIn","maxWidth","width","margin","display","justifyContent","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21bafaa8.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\n\nconst Kyuwitt = ({ mentions, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newKyuwitt, setNewKyuwitt] = useState(mentions.text);\n\n  const deleteKyuwitt = async () => {\n    const confirm = window.confirm(\"정말 삭제 하시겠습니까?\");\n    if (confirm) {\n      await dbService.doc(`kyuwitter/${mentions.id}`).delete();\n      await storageService.refFromURL(mentions.imgFileUrl);\n    }\n  };\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n  };\n\n  const onChangeEdit = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewKyuwitt(value);\n  };\n\n  const onSubmitEdit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`kyuwitter/${mentions.id}`).update({\n      text: newKyuwitt,\n    });\n    setEditing(false);\n  };\n\n  return (\n    <div className=\"kyuwitt_wrap\">\n      <div className=\"kyuwitt_img_wrap\">\n        <div className=\"nweet\">\n          {editing ? (\n            <>\n              <form onSubmit={onSubmitEdit} className=\"container nweetEdit\">\n                <input\n                  type=\"text\"\n                  placeholder=\"EDIT ! ! \"\n                  value={newKyuwitt}\n                  required\n                  onChange={onChangeEdit}\n                  className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"Update ! !\" className=\"formBtn\" />\n              </form>\n              <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </button>\n            </>\n          ) : (\n            <>\n              <h4>{mentions.text}</h4>\n            </>\n          )}\n        </div>\n        {mentions.imgFileUrl && <img src={mentions.imgFileUrl} alt=\"\" />}\n      </div>\n      <div className=\"kyuwitt_actions\">\n        {isOwner && (\n          <div className=\"nweet__actions\">\n            <button onClick={deleteKyuwitt} className=\"kyuwitt_btn\">\n              Delete Kyuwitt\n            </button>\n            <button\n              onClick={toggleEditing}\n              className=\"kyuwitt_btn\"\n              style={{ marginLeft: \"10px\" }}\n            >\n              Edit Kyuwitt\n            </button>\n          </div>\n        )}\n      </div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Kyuwitt;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\n\nconst KyuwittFactory = ({ userObj }) => {\n  const [kyuWitt, setKyuWitt] = useState(\"\");\n  const [imgFile, setImgFile] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    if (kyuWitt === \"\") {\n      return;\n    }\n    let imgFileUrl = \"\";\n    if (imgFile !== \"\") {\n      const imgFileRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const imgFileResponse = await imgFileRef.putString(imgFile, \"data_url\");\n      imgFileUrl = await imgFileResponse.ref.getDownloadURL();\n    }\n    const kyuwittObj = {\n      text: kyuWitt,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      imgFileUrl,\n    };\n\n    await dbService.collection(\"kyuwitter\").add(kyuwittObj);\n    setKyuWitt(\"\");\n    setImgFile(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setKyuWitt(value);\n  };\n\n  const onImgChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishEvent;\n      setImgFile(result);\n    };\n    if (Boolean(theFile)) {\n      reader.readAsDataURL(theFile);\n    }\n  };\n\n  const onDeleteImgClick = () => {\n    setImgFile(\"\");\n  };\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          type=\"text\"\n          placeholder=\"what's on your mind?\"\n          value={kyuWitt}\n          onChange={onChange}\n          maxLength={120}\n          className=\"factoryInput__input\"\n        />\n        <input type=\"submit\" value=\"yes\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add Photo</span>\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"imgage/*\"\n        onChange={onImgChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {imgFile && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={imgFile}\n            alt=\"\"\n            style={{\n              backgroundImage: imgFile,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onDeleteImgClick}>\n            <span>Romove</span>\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default KyuwittFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Kyuwitt from \"components/Kyuwitt\";\nimport KyuwittFactory from \"components/KyuwittFactory\";\n\nconst Home = ({ userObj }) => {\n  const [mention, setMention] = useState([]);\n\n  // const getMention = async () => {\n  //   const dbMention = await dbService.collection(\"kyuwitter\").get();\n  //   dbMention.forEach((document) => {\n  //     const mentionObj = {\n  //       ...document.data(),\n  //       id: document.id,\n  //     };\n  //     setMention((prev) => [mentionObj, ...prev]);\n  //   });\n  // }; !!!!!!멘션을 가져오는 구식의 방식!!!\n\n  useEffect(() => {\n    // getMention();\n    dbService.collection(\"kyuwitter\").onSnapshot((snapshot) => {\n      const mentionArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setMention(mentionArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <KyuwittFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {mention.map((mentions) => (\n          <Kyuwitt\n            key={mentions.id}\n            mentions={mentions}\n            isOwner={mentions.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n// import \"./AuthForm.scss\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let data;\n    try {\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n  return (\n    <>\n      <form autoComplete=\"off\" onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create New Account\" : \"Log In\"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Log In\" : \"Create New Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\nimport { FcGoogle } from \"react-icons/fc\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    let provider;\n    provider = new firebaseInstance.auth.GoogleAuthProvider();\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <AuthForm />\n      <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n        <div className=\"authGoogleWrap\">\n          <FcGoogle className=\"googleIcon\" size=\"20\" />\n          Continue with Google\n        </div>\n      </button>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  // const getMyKyuwitt = async () => {\n  //   const kyuwitts = await dbService\n  //     .collection(\"kyuwitter\")\n  //     .where(\"creatorId\", \"==\", userObj.uid)\n  //     .orderBy(\"creatorAt\")\n  //     .get();\n  //   console.log(kyuwitts.docs.map((doc) => doc.data()));\n  // };\n\n  // useEffect(() => {\n  //   getMyKyuwitt();\n  // }, []);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n    }\n    refreshUser();\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          placeholder=\"Display Name\"\n          value={newDisplayName}\n          onChange={onChange}\n          autoFocus\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log out!\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AiOutlineHome } from \"react-icons/ai\";\nimport { CgProfile } from \"react-icons/cg\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul className=\"nav_ul\">\n        <li className=\"nav_li\">\n          <Link to=\"/\">\n            <sapn>Home</sapn>\n            <AiOutlineHome style={{ marginLeft: \"5px\" }} size=\"14px\" />\n          </Link>\n        </li>\n        <li className=\"nav_li\">\n          <Link to=\"/profile\">\n            <span>\n              {userObj.displayName\n                ? `${userObj.displayName} 의 Profile`\n                : \"Profile\"}\n            </span>\n            <CgProfile style={{ marginLeft: \"5px\" }} size=\"14px\" />\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"routes/Home\";\nimport Auth from \"routes/Auth\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <HashRouter>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route>\n              <Auth exact path=\"/\" />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { ImSleepy } from \"react-icons/im\";\n// import \"./App.scss\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n    console.log(user.displayName);\n  };\n\n  return (\n    <div className=\"app_container\">\n      {init && (\n        <div style={{ display: \"flex\" }}>\n          <div className=\"title\">Kyuwitter</div>\n          <ImSleepy size=\"20px\" style={{ marginLeft: \"10px\" }} />\n        </div>\n      )}\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        <span className=\"initial\">Initializing...</span>\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} KYUWITTER</footer> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n// import \"scss/Common.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}